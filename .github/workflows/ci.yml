name: CI
on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
jobs:
  parsing:
    strategy:
      fail-fast: false
      matrix:
        nix_path: [
            "nixpkgs=channel:nixos-unstable"
          , "nixpkgs=channel:nixos-20.09"
          , "nixpkgs=channel:nixos-20.03"
        ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Nix
        uses: cachix/install-nix-action@v12
        with:
          nix_path: ${{ matrix.nix_path }}
      - uses: cachix/cachix-action@v8
        with:
          name: nixops-digitalocean
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Prefetch shell.nix
        run: 'nix-shell --run true'
      - name: Parsing
        run: './ci/check-nix-files.sh'
  build:
    strategy:
      fail-fast: false
      matrix:
        nix_path: [
            "nixpkgs=channel:nixos-unstable"
          , "nixpkgs=channel:nixos-20.09"
          , "nixpkgs=channel:nixos-20.03"
        ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Nix
        uses: cachix/install-nix-action@v12
        with:
          nix_path: ${{ matrix.nix_path }}
      - uses: cachix/cachix-action@v8
        with:
          name: nixops-digitalocean
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Prefetch shell.nix
        run: 'nix-shell --run true'
      - name: Build
        run: 'nix-build'
  black:
    strategy:
      fail-fast: false
      matrix:
        nix_path: [
            "nixpkgs=channel:nixos-unstable"
          , "nixpkgs=channel:nixos-20.09"
          , "nixpkgs=channel:nixos-20.03"
        ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Nix
        uses: cachix/install-nix-action@v12
        with:
          nix_path: ${{ matrix.nix_path }}
      - uses: cachix/cachix-action@v8
        with:
          name: nixops-digitalocean
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Prefetch shell.nix
        run: 'nix-shell --run true'
      - name: Black
        run: './ci/check-formatting.sh'
  nixpkgs-fmt:
    strategy:
      fail-fast: false
      matrix:
        nix_path: [
            "nixpkgs=channel:nixos-unstable"
          , "nixpkgs=channel:nixos-20.09"
          , "nixpkgs=channel:nixos-20.03"
        ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Nix
        uses: cachix/install-nix-action@v12
        with:
          nix_path: ${{ matrix.nix_path }}
      - uses: cachix/cachix-action@v8
        with:
          name: nixops-digitalocean
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Prefetch shell.nix
        run: 'nix-shell --run true'
      - name: Nix Format
        run: './ci/check-nix-formatting.sh'
  mypy:
    strategy:
      fail-fast: false
      matrix:
        nix_path: [
            "nixpkgs=channel:nixos-unstable"
          , "nixpkgs=channel:nixos-20.09"
          , "nixpkgs=channel:nixos-20.03"
        ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Nix
        uses: cachix/install-nix-action@v12
        with:
          nix_path: ${{ matrix.nix_path }}
      - uses: cachix/cachix-action@v8
        with:
          name: nixops-digitalocean
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Prefetch shell.nix
        run: 'nix-shell --run true'
      - name: Mypy
        run: './ci/check-mypy.sh'
  flake8:
    strategy:
      fail-fast: false
      matrix:
        nix_path: [
            "nixpkgs=channel:nixos-unstable"
          , "nixpkgs=channel:nixos-20.09"
          , "nixpkgs=channel:nixos-20.03"
        ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Nix
        uses: cachix/install-nix-action@v12
        with:
          nix_path: ${{ matrix.nix_path }}
      - uses: cachix/cachix-action@v8
        with:
          name: nixops-digitalocean
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Prefetch shell.nix
        run: 'nix-shell --run true'
      - name: Flake8
        run: './ci/check-flake8.sh'
  mypy-ratchet:
    strategy:
      fail-fast: false
      matrix:
        nix_path: [
            "nixpkgs=channel:nixos-unstable"
          , "nixpkgs=channel:nixos-20.09"
          , "nixpkgs=channel:nixos-20.03"
        ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Nix
        uses: cachix/install-nix-action@v12
        with:
          nix_path: ${{ matrix.nix_path }}
      - uses: cachix/cachix-action@v8
        with:
          name: nixops-digitalocean
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Prefetch shell.nix
        run: 'nix-shell --run true'
      - name: Mypy Ratchet
        run: './ci/mypy-ratchet.sh'
  coverage:
    strategy:
      fail-fast: false
      matrix:
        nix_path: [
            "nixpkgs=channel:nixos-unstable"
          , "nixpkgs=channel:nixos-20.09"
          , "nixpkgs=channel:nixos-20.03"
        ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Nix
        uses: cachix/install-nix-action@v12
        with:
          nix_path: ${{ matrix.nix_path }}
      - uses: cachix/cachix-action@v8
        with:
          name: nixops-digitalocean
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Prefetch shell.nix
        run: 'nix-shell --run true'
      - name: Coverage
        run: './ci/check-tests.sh'
  docs:
    strategy:
      fail-fast: false
      matrix:
        nix_path: [
            "nixpkgs=channel:nixos-unstable"
          , "nixpkgs=channel:nixos-20.09"
          , "nixpkgs=channel:nixos-20.03"
        ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Nix
        uses: cachix/install-nix-action@v12
        with:
          nix_path: ${{ matrix.nix_path }}
      - uses: cachix/cachix-action@v8
        with:
          name: nixops-digitalocean
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Prefetch shell.nix
        run: 'nix-shell --run true'
      - name: Restructured Text Lint
        run: './ci/lint-docs.sh'
  poetry-up-to-date:
    strategy:
      fail-fast: false
      matrix:
        nix_path: [
            "nixpkgs=channel:nixos-unstable"
          , "nixpkgs=channel:nixos-20.09"
          , "nixpkgs=channel:nixos-20.03"
        ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Nix
        uses: cachix/install-nix-action@v12
        with:
          nix_path: ${{ matrix.nix_path }}
      - uses: cachix/cachix-action@v8
        with:
          name: nixops-digitalocean
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Prefetch shell.nix
        run: 'nix-shell --run true'
      - name: Poetry Locks Consistent
        run: './ci/check-poetry.sh'
